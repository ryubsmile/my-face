{"version":3,"sources":["components/NavBar.tsx","components/Article.tsx","components/BigText.tsx","components/pages/Home.tsx","components/pages/Works.tsx","components/pages/About.tsx","components/pages/Contact.tsx","components/TopLevelContent.tsx","index.tsx"],"names":["NavBar","props","defaultURL","pageList","slideIndex","setSlideIndex","updateSlide","selectedSlideIndex","indexToGetHeight","slideBox","document","querySelector","selectedSlide","querySelectorAll","style","height","clientHeight","updateHeight","pageName","name","updateURL","updateDocTitle","toLowerCase","charAt","toUpperCase","slice","window","onload","buttons","i","length","id","onClick","bind","className","src","alt","text","history","replaceState","title","isInitialLoad","Article","useState","containerWidth","slideWidth","widths","setWidths","slideHeight","setHeight","updateCss","width","css","transition","transform","slideSpeed","useEffect","clientWidth","body","updateWidths","addEventListener","removeEventListener","slides","map","item","index","BigText","Home","subContent","Works","About","Contact","createMethodHTML","href","orgnTxt","hvrTxt","target","rel","TopLevelContent","entireURL","url","replace","urlDesiredSlideIndex","lowerCasePageName","includes","PageRouter","pathName","location","pathname","hash","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.18d46d62.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\nimport './NavBar.css';\nimport { TypeArticleProps } from './PagesTemplate';\n\ninterface TypeProps {\n  defaultURL: string;\n  pageList: React.ReactElement<TypeArticleProps>[];\n  slideIndex: number;\n  setSlideIndex: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst NavBar: React.FC<TypeProps> = (props): ReactElement => {\n  const [      defaultURL,       pageList,       slideIndex,       setSlideIndex] \n      = [props.defaultURL, props.pageList, props.slideIndex, props.setSlideIndex];\n\n  // function called when each nav button is clicked => fnc from parent toplevelcontent.js\n  function updateSlide(selectedSlideIndex: number): void { \n    setSlideIndex(selectedSlideIndex); // update state \n    updateHeight(selectedSlideIndex); // update height to match slide height\n\n    // update url via History API & document title\n    const pageName: string = pageList[selectedSlideIndex]?.props.name;\n    if(selectedSlideIndex === 0){\n      updateURL(defaultURL + \"/\");\n      updateDocTitle(\"WebFace\");\n    }else{\n      updateURL(\"#/\" + pageName.toLowerCase()); // lowercase\n      updateDocTitle(\"WebFace â€¢ \" + pageName.charAt(0).toUpperCase() + pageName.slice(1));\n    }\n  }\n\n  // update height for the first page. Deals with DOM, so use window.onload\n  window.onload = () => { updateSlide(slideIndex); }; \n\n  // update buttons and apply states\n  let buttons = [];\n  for(let i = 0; i < pageList.length; i++){\n    if(i === 0) { // only for the home page\n      buttons[i] = <button key={i} id=\"logo-color-change\" onClick={updateSlide.bind(null, i)}>\n                     <img className={(i === slideIndex)? \"nav-item active\": \"nav-item inactive\"} \n                          src=\"images/icon2.png\" \n                          alt=\"OOPS! REFRESH!\" />\n                   </button>\n    }else{\n      buttons[i] = <button key={i} onClick={updateSlide.bind(null, i)}>\n                     <span className={(i === slideIndex)? \"nav-item active\": \"nav-item inactive\"}>\n                       {pageList[i].props.name.toUpperCase()}\n                     </span>\n                   </button>\n    }\n  }\n\n  return (\n    <header className=\"nav\">\n      <div className=\"nav-container\">\n        <div className=\"nav-item logo\">\n          {buttons[0]}\n        </div>\n        <div className=\"nav-item links\">\n          {buttons.slice(1) /* 1 ~ end */} \n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default NavBar;\n\n// update height according to the selected slide\nfunction updateHeight(indexToGetHeight: number): void{\n  const slideBox = document.querySelector('.slide-box') as HTMLElement;\n  const selectedSlide: Element = document.querySelectorAll('.slide-content')[indexToGetHeight];\n  slideBox.style.height = selectedSlide.clientHeight + \"px\"; \n}\n\nfunction updateURL(text: string){ window.history.replaceState(null, \"\", text); }\n\nfunction updateDocTitle(text: string){ document.title = text; }","/**\n * THIS IS AN ARTICLE COMPONENT.\n * ANYTHING ON THIS SCRIPT DOES NOT AFFECT HEADER.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport './Article.css';\nimport { TypeArticleProps } from './PagesTemplate';\n\nlet customSidePadding: number = 150; // pass as prop later on for responsive design\nconst slideSpeed: number = 300; // milliseconds\nlet isInitialLoad: number = 1; \n\ninterface TypeProps {\n  pageList: React.ReactElement<TypeArticleProps>[];\n  slideIndex: number;\n}\n\nconst Article: React.FC<TypeProps> = (props) => {\n  const [pageList, slideIndex] = [props.pageList, props.slideIndex]; //receive props\n\n  const [widths, setWidths] = useState({\n    containerWidth: 0,\n    slideWidth: 0,\n  });\n  const [slideHeight, setHeight] = useState(0);\n\n  //on component update || mount\n  useEffect(() => {\n    const updateSlide = () => { \n      updateWidths(setWidths); \n      updateHeight(setHeight, slideIndex); \n    }\n    updateSlide();\n    window.addEventListener('resize', () => { updateSlide(); });\n    return () => { // when component unmounts.\n      window.removeEventListener('resize', () => { updateSlide(); });\n    }\n  },[slideIndex]); // bind an empty array to prevent infinite rendering\n\n  function updateCss(width: number, slideIndex: number){\n    const css = {\n      width: width + \"px\",\n      transition: \"\",\n      transform: \"\",\n    };\n\n    // for first page load, skip this.\n    if(slideIndex >= 0){\n      // skip animation if it's the first time loading this document, e.g. access via direct url.\n      css.transition = (isInitialLoad-- >= 0)? \"0ms\" : slideSpeed + \"ms\";\n      css.transform = `translateX(-${(widths.containerWidth * slideIndex)}px)`;\n    }\n\n    return css;\n  };\n\n  // create slides in the slides var\n  let slides: JSX.Element[] = pageList.map((item: React.ReactElement<TypeArticleProps>, index: number)=>{\n    return (\n      // <div className=\"slide-content\" key={index} style={{height: test}}>\n      <div className=\"slide-content\" key={index} style={updateCss(widths.slideWidth, -1)}>\n        {item}\n      </div>\n    );\n  });\n\n  return (\n    <article className=\"main-container\">\n      <div className=\"slide-wrap\" style={updateCss(widths.containerWidth, -1)}>\n        <div className=\"slide-box\" style={{height: slideHeight}}>\n          <div className=\"slide-list\" style={updateCss(widths.containerWidth * slides.length + 20, slideIndex)}>\n            {slides}\n          </div>\n        </div>\n      </div>\n    </article>\n  );\n}\n\nexport default Article;\n\n/* update and render width on every time resize event happens : width changes.*/\nfunction updateWidths(setWidths: React.Dispatch<any>): void {\n  const clientWidth = document.body.clientWidth;\n  //@media(max-width: 900px) 13vw\n  const sidePaddingResponsive = (clientWidth > 900)? customSidePadding : clientWidth * 0.13; \n  setWidths({\n    containerWidth: clientWidth,\n    slideWidth: clientWidth - sidePaddingResponsive * 2,\n  });\n};\n\nfunction updateHeight(setHeight: React.Dispatch<any>, slideIndex: number): void {\n  const selectedSlide: Element = document.querySelectorAll('.slide-content')[slideIndex];\n  setHeight(selectedSlide.clientHeight);\n}","import React from 'react';\nimport { ReactElement } from 'react';\nimport './BigText.css';\n\ninterface TypeProps {\n  title: string;\n}\n\nconst BigText: React.FC<TypeProps> = (props): ReactElement => {\n  let [title=\"NoTitleException e\"] = [props.title];\n\n  return (\n    <div className=\"page-mask\">\n      <h1 className=\"big-text\">{title}</h1>\n    </div>\n  );\n};\n\nexport default BigText;","import React from 'react';\nimport BigText from '../BigText';\nimport './Home.css'\nimport { TypeArticleProps } from '../PagesTemplate';\n\nconst lorem =  `Lorem ipsum dolor sit, amet consectetur adipisicing elit. Aut et non facilis accusantium adipisci fugiat \n  veritatis culpa perferendis quo quos voluptate quas quaerat minus aspernatur repellat minima doloribus, ut rerum sed \n  totam voluptatibus dolores a distinctio. Aperiam, dolores soluta qui mollitia hic, iusto earum ea officia nesciunt, \n  porro necessitatibus quod temporibus culpa perspiciatis nemo rerum consequuntur eius aliquam? Saepe nesciunt quisquam, \n  officia nobis totam doloremque? Ipsum quos non expedita eos qui! Cumque qui voluptate et officiis tempore excepturi \n  debitis eligendi labore architecto odio nisi repellendus numquam ipsam repudiandae tenetur iure modi, expedita odit \n  quis iste doloribus?`;\n\nconst Home: React.FC<TypeArticleProps> = props => {\n  const subContent = (\n    <div className=\"markDown\">\n      <p className=\"explanation\">\n        import <span className=\"white\">Highschool</span>,{\" { \"}<span className=\"white\"> math</span>, \n        <span className=\"white\"> science </span> {\" } \"} from '<span className=\"quote\">/jeju/kisj/classOf2022</span>';\n      </p>\n    </div>\n  );\n\n  return (\n    <>\n      {subContent}\n      <BigText title=\"Jaehyuk.ryu();\"/>\n      {lorem}\n    </>\n  );\n}\n\nexport default Home;","import React from 'react';\nimport BigText from '../BigText';\nimport { TypeArticleProps } from '../PagesTemplate';\n\nconst lorem = 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Id ullam eum optio voluptatibus nam dolorem odit assumenda dicta maiores dignissimos! Corrupti laboriosam, possimus beatae dolorum vero qui esse doloremque laudantium placeat recusandae sint nobis ratione sapiente nam magni rem tempora aliquam distinctio, quam deserunt? At omnis veniam eaque voluptas molestias quibusdam iste aliquam maxime culpa non placeat, sequi, porro animi, dicta iusto saepe minus incidunt quaerat. Voluptas dolores distinctio ex omnis veniam recusandae facilis vitae tenetur quisquam harum ea accusamus repellendus alias, esse consequatur maiores non illum quibusdam mollitia eligendi provident accusantium quis nostrum velit! Consequuntur repudiandae consectetur, illum alias iusto voluptates rerum nesciunt optio quaerat expedita dicta, porro voluptate quia debitis? Delectus accusamus fugit nemo quasi. Tempore ullam quis amet tenetur similique cum esse illum laboriosam, cumque sapiente, neque aspernatur id? Fugiat illo optio culpa impedit obcaecati voluptatum maxime, vel non eligendi minima, sapiente neque voluptatem autem maiores veritatis explicabo temporibus repudiandae ipsa voluptates doloremque minus blanditiis illum ad! Labore cupiditate laudantium tempore incidunt expedita quos facilis autem. Consectetur numquam aliquam quisquam eius eos facere inventore id quasi repudiandae maiores iusto unde eveniet corrupti enim, temporibus quia odio non aliquid officia dolorum commodi nobis. Cumque dignissimos optio debitis velit dicta odit sint unde possimus inventore magni vitae iusto excepturi voluptate soluta ea atque, expedita commodi culpa sequi? Explicabo, architecto totam praesentium quae, amet nihil aspernatur dolore provident quas animi rem facere quisquam nemo tempora optio error eveniet veritatis laboriosam ea, dicta dolores earum at suscipit officia. Modi repudiandae tenetur totam, dignissimos veniam reprehenderit quas veritatis doloremque magni. Magnam laudantium reiciendis possimus eos, doloribus laborum! Rem illum accusantium neque fugit porro, nihil cumque ipsa id tempore laborum maiores mollitia quia dolorum quam alias praesentium. Est accusamus aspernatur itaque alias dolorum eligendi nulla, saepe cupiditate excepturi ad ipsum facere tenetur nisi quaerat neque consequuntur quod asperiores fuga quo cumque consectetur obcaecati voluptates repellat? Voluptatum similique dolorem laborum laudantium cumque, debitis aliquam, sed voluptatibus ipsa commodi architecto magni. Ullam, odit doloremque! Adipisci quidem laboriosam aperiam necessitatibus animi aliquid qui ipsa possimus magnam dolorem, atque dicta! Quos adipisci hic a natus placeat! Tempora, ipsum laboriosam facere dicta porro, vitae consectetur dolor facilis at officia voluptatem nobis doloremque similique, quidem eligendi quis. Nam repudiandae, consectetur dolorem in corrupti explicabo iusto reiciendis est. Repellendus unde incidunt sapiente ad, consequuntur, dolor excepturi animi, deserunt ipsa repudiandae tenetur quaerat dicta? Laudantium alias suscipit reprehenderit itaque incidunt tenetur vero, maiores et ut illum, id odit praesentium eius, nemo dolore. Fugit error dolorem eligendi. Saepe illo magni repellat nobis ut error accusantium libero alias quibusdam, nemo commodi. Labore fuga recusandae dolores at dolorum harum natus itaque illo autem, consequatur voluptatum sunt ab error velit aperiam unde. Saepe corporis molestiae ratione accusantium necessitatibus itaque natus odio quas distinctio, provident laboriosam praesentium nisi excepturi odit, ab delectus quaerat eos ipsa vitae ea reprehenderit cum. Molestias, amet. Cumque accusamus voluptatem et vitae sed assumenda culpa ad quod velit! Doloribus quibusdam eveniet rem modi molestias, quisquam molestiae natus sed placeat voluptate consectetur unde totam fugiat odit ipsa hic minus obcaecati neque? Qui facilis rerum consequuntur est ducimus ratione. Minima animi at soluta eligendi totam dolorem vitae sequi unde! Id odit distinctio exercitationem voluptate suscipit nobis repellat, accusantium temporibus fugiat mollitia error? Labore adipisci cum soluta, quas error voluptas modi earum dolores unde, incidunt itaque sapiente fugit est accusamus nam facilis fuga nesciunt, voluptatibus doloremque vero! Quam minima, voluptatibus veniam cumque deserunt eius commodi error qui reprehenderit beatae omnis iste, accusamus libero alias. Sequi praesentium assumenda, ducimus dolorem veritatis nobis magnam saepe animi nihil tempore corrupti illum debitis sed. Cum perspiciatis adipisci consequuntur nemo, optio facere quaerat omnis ipsam aut aspernatur explicabo eaque harum necessitatibus beatae, error ducimus animi a fugit doloribus itaque maiores tempore labore, officia autem. Eius nobis itaque odit temporibus. Expedita, quia minima impedit eius corporis, veritatis nam similique autem pariatur vero natus suscipit debitis sunt quibusdam? Suscipit, ab accusamus cumque necessitatibus beatae deleniti odio fugiat maxime tempora delectus velit natus voluptas expedita officia. Provident recusandae nemo eligendi optio non eos aut inventore molestias? Explicabo reiciendis blanditiis repellat quia facilis, neque expedita? Nisi quam, delectus voluptas exercitationem quidem explicabo aperiam ipsa, illo eveniet ratione natus, accusantium ipsam. Quaerat debitis tempora consequuntur.'\n\nconst Works: React.FC<TypeArticleProps> = props => {\n  return (\n    <>\n      <BigText title=\"works();\" />\n      <div>{lorem}</div>\n    </>\n  );\n}\n\nexport default Works;","import React from 'react';\nimport BigText from '../BigText';\nimport { TypeArticleProps } from '../PagesTemplate';\n\nconst About: React.FC<TypeArticleProps> = props => {\n  return (\n    <>\n      <BigText title=\"about();\" />\n    </>\n  );\n}\n\nexport default About;","import React from 'react';\nimport BigText from '../BigText';\nimport './Contact.css'\nimport { TypeArticleProps } from '../PagesTemplate';\n\nconst Contact: React.FC<TypeArticleProps> = props => {\n  //const name = props.name;\n  return (\n    <>\n      <BigText title=\"contact();\"/>\n      <div className=\"contact-methods\">\n        {createMethodHTML}\n      </div>\n    </>\n  );\n}\n\nexport default Contact;\n\ninterface TypeMethod {\n  name: string;\n  href?: string;\n  orgnTxt: string;\n  hvrTxt?: string;\n}\n\nconst contactMethods: TypeMethod[] = [\n  {\n    name: \"email\",\n    href: \"mailto:ryubsmile@gmail.com\",\n    orgnTxt: \"EMAIL ME!\",\n    hvrTxt: \"ryubsmile@gmail.com\"\n  },\n  {\n    name: \"github\",\n    href: \"https://github.com/ryubsmile\",\n    orgnTxt: \"GITHUB\",\n    hvrTxt: \"ryubsmile\"\n  },\n  {\n    name: \"TBD\",\n    href: \"/contact\",\n    orgnTxt: \"To be added\"\n  },\n];\n\nconst createMethodHTML: JSX.Element[] = contactMethods.map((item: TypeMethod, index: number)=>{\n  return (\n    <div className={\"method \" + item.name} key={index}>\n      <a href={item.href} target=\"_blank\" rel=\"noopener noreferrer\">\n        {item.orgnTxt}\n      </a>\n    </div>\n  );\n});\n\n//function changeText(this: HTMLAnchorElement, textToChange: string){ this.textContent = textToChange; };","import React, { useState, ReactElement } from 'react';\nimport NavBar from './NavBar';\nimport Article from './Article';\n\n//-> article list start\nimport Home from './pages/Home';\nimport Works from './pages/Works';\nimport About from './pages/About';\nimport Contact from './pages/Contact';\nimport { TypeArticleProps } from './PagesTemplate';\n\n// add article to this object if adding one.\nconst pageList: React.ReactElement<TypeArticleProps>[] = [\n  <Home name=\"Home\"/>,\n  <Works name=\"Works\"/>,\n  <About name=\"About\"/>,\n  <Contact name=\"Contact\"/>,\n];\n//<- article list end\n\ninterface TypeProps {\n  defaultURL: string;\n  entireURL: string;\n}\n\nconst TopLevelContent: React.FC<TypeProps> = (props): ReactElement => {\n  const [defaultURL, entireURL] = [props.defaultURL, props.entireURL];\n  let url = entireURL.replace(defaultURL, \"\"); // parse url, e.g. webface/works => /works\n\n  // finds out the matching index for the url. If none, revert to 0.\n  let urlDesiredSlideIndex: number = pageList.length;\n  while(--urlDesiredSlideIndex > 0){\n    const lowerCasePageName = pageList[urlDesiredSlideIndex].props.name.toLowerCase();\n    if(url.includes(lowerCasePageName)){ break; }\n  }\n\n  const [slideIndex, setSlideIndex] = useState<number>(urlDesiredSlideIndex || 0);\n  return(\n    <>\n      <NavBar defaultURL={defaultURL} \n              pageList={pageList} \n              slideIndex={slideIndex} \n              setSlideIndex={setSlideIndex} />\n      <Article pageList={pageList} \n               slideIndex={slideIndex} />\n    </>\n  );\n};\n\nexport default TopLevelContent;","/** \n * Main, and topmost javascript file that shows all the components according to order.\n * \n * If a component is somehow not connected to this script, \n * it will not show up on the website no matter what.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport TopLevelContent from './components/TopLevelContent';\n\nconst PageRouter = () => { \n  const defaultURL = \"/webface\";\n  const pathName: string = window.location.pathname + window.location.hash; \n\n  return <TopLevelContent defaultURL={defaultURL} entireURL={pathName} />;\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <PageRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// root where Root.js file is interpreted.\n"],"sourceRoot":""}